// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package foobar represents the exported interface "compose:lib/foo-bar@0.0.1".
package foobar

import (
	"github.com/hayride-dev/compose-bug/gen/exports/compose/lib/foo"
	"go.bytecodealliance.org/cm"
)

// FooResource represents the exported type alias "compose:lib/foo-bar@0.0.1#foo-resource".
//
// See [foo.FooResource] for more information.
type FooResource = foo.FooResource

// FooBarResource represents the exported resource "compose:lib/foo-bar@0.0.1#foo-bar-resource".
//
//	resource foo-bar-resource
type FooBarResource cm.Resource

// FooBarResourceResourceNew represents the imported resource-new for resource "foo-bar-resource".
//
// Creates a new resource handle.
//
//go:nosplit
func FooBarResourceResourceNew(rep cm.Rep) (result FooBarResource) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_FooBarResourceResourceNew((uint32)(rep0))
	result = cm.Reinterpret[FooBarResource]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "foo-bar-resource".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self FooBarResource) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_FooBarResourceResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "foo-bar-resource".
//
// Drops a resource handle.
//
//go:nosplit
func (self FooBarResource) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_FooBarResourceResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.FooBarResource.Destructor = func(self cm.Rep) {}
}
