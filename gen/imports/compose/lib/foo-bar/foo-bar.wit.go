// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package foobar represents the imported interface "compose:lib/foo-bar@0.0.1".
package foobar

import (
	"github.com/hayride-dev/compose-bug/gen/imports/compose/lib/foo"
	"go.bytecodealliance.org/cm"
)

// FooResource represents the imported type alias "compose:lib/foo-bar@0.0.1#foo-resource".
//
// See [foo.FooResource] for more information.
type FooResource = foo.FooResource

// FooBarResource represents the imported resource "compose:lib/foo-bar@0.0.1#foo-bar-resource".
//
//	resource foo-bar-resource
type FooBarResource cm.Resource

// ResourceDrop represents the imported resource-drop for resource "foo-bar-resource".
//
// Drops a resource handle.
//
//go:nosplit
func (self FooBarResource) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_FooBarResourceResourceDrop((uint32)(self0))
	return
}

// NewFooBarResource represents the imported constructor for resource "foo-bar-resource".
//
//	constructor()
//
//go:nosplit
func NewFooBarResource() (result FooBarResource) {
	result0 := wasmimport_NewFooBarResource()
	result = cm.Reinterpret[FooBarResource]((uint32)(result0))
	return
}

// FooBar represents the imported method "foo-bar".
//
//	foo-bar: func(f: foo-resource) -> string
//
//go:nosplit
func (self FooBarResource) FooBar(f FooResource) (result string) {
	self0 := cm.Reinterpret[uint32](self)
	f0 := cm.Reinterpret[uint32](f)
	wasmimport_FooBarResourceFooBar((uint32)(self0), (uint32)(f0), &result)
	return
}
